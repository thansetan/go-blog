// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log in as an existing user by providing a username and password\nUpon successful login, a JWT will be provided",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login as an existing user",
                "parameters": [
                    {
                        "description": "data required to login to an existing account",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new account by providing required data. This will automatically create a blog named: \"\u003cuser's name\u003e's blog\".\nUser's username and email must be unique. Meaning that there can't be 2 users using the same email/username.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "data required to create a new account",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/helpers.InputError"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/blog/my": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get current user's blog information (name, description, number of posts).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Get current user's blog information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.BlogResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Change current user's blog name and description.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Change current user's blog information",
                "parameters": [
                    {
                        "description": "data required to change user's blog information",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateBlogRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    }
                }
            }
        },
        "/blog/my/posts": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get all current user's blog posts. When there are no posts, it will return an empty array ([]).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Get all current user's blog posts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.PostResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a new post on current user's blog.\nUpon successful creation, it will return the newly created post's slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Create a new blog post",
                "parameters": [
                    {
                        "description": "data required to create a new post",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CreatePostResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/blog/my/posts/{post_slug}": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update/modify current user's blog post by providing the post's slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Update/modify current user's post",
                "parameters": [
                    {
                        "description": "data required to update/modify a post",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PostRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete current user's blog post by providing the post slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Delete current user's post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/blog/{username}": {
            "get": {
                "description": "Get user's blog information (name, description, number of posts) by providing their username.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog"
                ],
                "summary": "Get user's blog information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.BlogResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/blog/{username}/posts": {
            "get": {
                "description": "Get user's blog posts by providing their username.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Get a user's blog posts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.PostResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/blog/{username}/posts/{post_slug}": {
            "get": {
                "description": "Get a specific post by providing their username and the post's slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Get a specific post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PostResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/blog/{username}/posts/{post_slug}/comments": {
            "get": {
                "description": "Get all comments on a post by post's URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get comments on a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blog owner's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.CommentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a new comment on a blog post.\nUpon successful creation, it will returns the newly created comment's ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Create a comment on a blog post",
                "parameters": [
                    {
                        "description": "data required to create a comment",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommentRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "blog owner's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CreateCommentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/blog/{username}/posts/{post_slug}/comments/{comment_id}": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Edit current user's comment on a post by providing comment ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Edit current user's comment on a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blog owner's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data required to modify comment",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommentRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "comment's ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a comment on a post by comment's ID.\nA non-blog-owner user can only delete their own comment.\nBlog's owner is allowed to delete ANY comment on their posts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blog owner's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "comment's ID",
                        "name": "comment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/blog/{username}/posts/{post_slug}/save/{list_slug}": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Add a post to the current user's list by providing the slug of the list to which the user wants to add the post.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Add post to current user's list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "blog owner's username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post's slug",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "list slug you want to add this post to",
                        "name": "list_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/lists/my": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get all of current user's lists\nWill return an empty array ([]) if the user has no lists.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Get current user's lists",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/helpers.MyListResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a new list for current user by providing required data.\nUpon successful creation, it will return the newly created list's slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Create a new list",
                "parameters": [
                    {
                        "description": "data required to create a new list",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ListRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CreateListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/lists/my/{list_slug}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get posts in my current user's by providing the list's slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Get posts in current user's list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug of the list you want to get the post from",
                        "name": "list_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/helpers.PostsInMyListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update/modify current user's list information (name and description) by providing the list's slug.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Update/modify current user's list information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "list slug you want to edit",
                        "name": "list_slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body required to update/modify list information",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.ListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete current user's list by providing the list slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Delete current user's list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug of the list you want to remove",
                        "name": "list_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/lists/my/{list_slug}/{post_slug}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Remove a post from current user's list by providing the list slug and post slug you want to remove.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "Remove a post from current user's list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "list slug you want to remove post from",
                        "name": "list_slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post slug you want to remove",
                        "name": "post_slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithoutDataAndError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseWithError"
                        }
                    }
                }
            }
        },
        "/my/comments": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get current user's comments on all posts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get current user's comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CommentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get user information about current logged in user",
                "tags": [
                    "User"
                ],
                "summary": "Get current user information",
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update current user's information by providing required data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update current user's information",
                "parameters": [
                    {
                        "description": "the body to update user's information",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserUpdateInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/me/update-password": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Change user password by providing required data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "the body to change user's password",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BlogResponse": {
            "type": "object",
            "properties": {
                "blog_description": {
                    "type": "string"
                },
                "blog_name": {
                    "type": "string"
                },
                "blog_owner": {
                    "type": "string"
                },
                "num_of_posts": {
                    "type": "integer"
                }
            }
        },
        "dto.CommentRequest": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "dto.CommentResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "comment_id": {
                    "type": "integer"
                },
                "commenter": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "post_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCommentResponse": {
            "type": "object",
            "properties": {
                "comment_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateListResponse": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                }
            }
        },
        "dto.CreatePostResponse": {
            "type": "object",
            "properties": {
                "post_slug": {
                    "type": "string"
                }
            }
        },
        "dto.ListRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.PostRequest": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.PostResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "post_slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "dto.UpdateBlogRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdatePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "dto.UserUpdateInfoRequest": {
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "helpers.InputError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "helpers.MyListResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "list_slug": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "num_of_posts": {
                    "type": "integer"
                }
            }
        },
        "helpers.PostsInMyListResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "list_slug": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PostResponse"
                    }
                }
            }
        },
        "helpers.ResponseWithData": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "helpers.ResponseWithError": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "helpers.ResponseWithoutDataAndError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "JWT Bearer Token. Need to Login to get the token. Usage: \"Bearer \u003cyour-token-here\u003e\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Go-Blog",
	Description:      "A simple medium-like blog API, writen in Go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
